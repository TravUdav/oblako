name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app ./
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Run Tests
        run: |
          docker-compose -f docker-compose.test.yml up -d
          docker-compose -f docker-compose.test.yml run web pytest
          docker-compose -f docker-compose.test.yml down

  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: ${{ secrets.HOSTING_NAME }}
          password: ${{ secrets.HOSTING_PASSWORD }}
          script: |

            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            APP_DIR="/root/Cloud"

            if [ ! -d "$APP_DIR" ]; then
              git clone https://github.com/TravUdav/oblako $APP_DIR
            else
              cd "$APP_DIR" || exit 1
              git fetch --all
              git reset --hard origin/main
            fi

            cd $APP_DIR

            docker-compose down || true

            docker-compose pull

            docker-compose -f docker-compose.server.yml up -d --build

            docker exec -i cloud-web-1 flask db init
            docker exec -i cloud-web-1 flask db migrate -m "Initial migration."
            docker exec -i cloud-web-1 flask db upgrade
