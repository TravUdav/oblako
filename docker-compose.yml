version: "3"

networks:
  flask_net:

services:
  web:
    build: . 
    ports:
      - "5000:5000" 
    expose:
      - "5000"
    depends_on:
      - db
      - redis
      - prometheus
    environment:
      - REDIS_HOST=redis 
      - SQLALCHEMY_DATABASE_URI=postgresql://user:password@db:5432/flask_db 
    networks:
      - flask_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:13 
    environment:
      POSTGRES_USER: user 
      POSTGRES_PASSWORD: password 
      POSTGRES_DB: flask_db 
    ports:
      - "5432:5432" 
    networks:
      - flask_net

  redis:
    image: "redis:alpine" 
    ports:
      - "6379:6379" 
    networks:
      - flask_net

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - flask_net

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot:/var/www/certbot

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - flask_net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - flask_net

  logstash:
    image: logstash:7.9.3
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5010:5000"
    networks:
      - flask_net

  elasticsearch:
    image: elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - flask_net

  kibana:
    image: kibana:7.9.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - flask_net

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - SQLALCHEMY_DATABASE_URI=postgresql://user:password@db:5432/flask_db

volumes:
  esdata:
